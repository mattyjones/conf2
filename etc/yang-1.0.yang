module yang {
    namespace "http://yang.org/yang";
    prefix "yang";
    description "Yang definition of yang";
    revision 2015-07-11 {
        description "Yang 1.0";
    }

    grouping def-header {
        leaf ident {
            type string;
        }
        leaf description {
            type string;
        }
    }

    grouping uses {
        container uses {
            leaf grouping {
                type string;
            }
            list refine {
                leaf default {
                    type string;
                }
            }
        }
    }

    grouping type {
        leaf ident {
            type string;
        }
        leaf range {
            type string;
        }
        list enumeration {
            leaf ident {
                type string;
            }
        }
    }

    grouping groupings-typedefs {
        list groupings {
            /*
              !! CIRCULAR
            */
            uses grouping;
        }
        list typedefs {
            uses def-header;
            uses type;
        }
    }

    grouping containers-lists-leafs-uses-choice {
        list definitions {
            choice body-stmt {
                case container {
                    container container {
                        uses def-header;
                        uses uses;
                        uses groupings-typedefs;
                        uses containers-lists-leafs-uses-choice;
                    }
                }
                case list {
                    container list {
                        uses def-header;
                        uses uses;
                        uses groupings-typedefs;
                        uses containers-lists-leafs-uses-choice;
                    }
                }
                case leaf {
                    container leaf {
                        uses def-header;
                        leaf config {
                            type bool;
                        }
                        leaf mandatory {
                            type bool;
                        }
                        uses type;
                    }
                }
                case leaf-list {
                    container leaf-list {
                        uses def-header;
                        leaf config {
                            type string;
                        }
                        leaf mandatory {
                            type string;
                        }
                        uses type;
                    }
                }
                case uses {
                    container uses {
                        uses uses;
                    }
                }
                case choice {
                    container choice {
                        uses def-header;
                        list cases {
                            leaf ident {
                                type string;
                            }
                            /*
                             !! CIRCULAR
                            */
                            uses containers-lists-leafs-uses-choice;
                        }
                    }
                }
            }
        }
    }

    grouping grouping {
        uses def-header;

        /*
          !! CIRCULAR
        */
        uses groupings-typedefs;
        uses containers-lists-leafs-uses-choice;
    }

    container module {
        uses def-header;
        leaf namespace {
            type string;
        }
        leaf prefix {
            type string;
        }
        container revision {
            leaf rev-date {
                type string;
            }
            leaf description {
                type string;
            }
        }
        list rpcs {
            uses def-header;
            container input {
                uses groupings-typedefs;
                uses containers-lists-leafs-uses-choice;
            }
            container output {
                uses groupings-typedefs;
                uses containers-lists-leafs-uses-choice;
            }
        }
        list notifications {
            uses def-header;
            uses groupings-typedefs;
            uses containers-lists-leafs-uses-choice;
        }
        uses groupings-typedefs;
        uses containers-lists-leafs-uses-choice;
    }
}